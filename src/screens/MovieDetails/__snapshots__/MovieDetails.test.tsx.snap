// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MovieDetails /> check if it is rendered properly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Array [
          Object {
            "zIndex": 1,
          },
          false,
        ]
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "paddingBottom": 10,
                            "paddingLeft": 0,
                            "paddingRight": 0,
                            "paddingTop": 10,
                          },
                        ]
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "fontSize": 20,
                              "fontWeight": "500",
                              "marginBottom": 10,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "marginTop": 10,
                              "textAlign": "center",
                            },
                          ]
                        }
                        testID="movie-title"
                      >
                        Darlin'
                      </Text>
                      <Image
                        resizeMode="contain"
                        source={
                          Object {
                            "uri": "http://image.tmdb.org/t/p/original//k60vmF4t3X9Yw4oAiQ2s0KtN7RU.jpg",
                          }
                        }
                        style={
                          Array [
                            Object {
                              "height": 250,
                            },
                          ]
                        }
                      />
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "flex-end",
                              "display": "flex",
                              "justifyContent": "center",
                              "paddingBottom": 0,
                              "paddingLeft": 20,
                              "paddingRight": 20,
                              "paddingTop": 0,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                                "marginTop": 10,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "flexBasis": 0,
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                },
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Popolarity
                            </Text>
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "black",
                                    "fontSize": 20,
                                    "fontWeight": "500",
                                  },
                                ]
                              }
                            >
                              136.328
                            </Text>
                          </View>
                          <View
                            style={
                              Array [
                                Object {
                                  "flexBasis": 0,
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                },
                              ]
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "fontSize": 16,
                                  },
                                ]
                              }
                            >
                              Vote
                            </Text>
                            <Text
                              ratingLevel="bad"
                              style={
                                Array [
                                  Object {
                                    "color": "red",
                                    "fontSize": 20,
                                    "fontWeight": "500",
                                  },
                                ]
                              }
                            >
                              4
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                            testID="favourite-icon"
                          >
                            <Image
                              source={
                                Object {
                                  "process": [Function],
                                }
                              }
                              style={
                                Array [
                                  Object {
                                    "height": 40,
                                    "width": 40,
                                  },
                                ]
                              }
                              testID="star-icon"
                            />
                          </View>
                        </View>
                      </View>
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "grey",
                              "lineHeight": 22,
                              "paddingBottom": 10,
                              "paddingLeft": 20,
                              "paddingRight": 20,
                              "paddingTop": 10,
                            },
                          ]
                        }
                      >
                        Found at a Catholic hospital filthy and ferocious, feral teenager Darlin’ is whisked off to a care home run by The Bishop and his obedient nuns, where she’s to be rehabilitated into a "good girl" as an example of the miraculous work of the church. But Darlin’ holds a secret darker than the "sins" she is threatened with, and she is not traveling alone. The Woman who raised her, equally fierce and feral, is ever present in the shadows of Darlin’s psyche and is determined to come for her no matter who tries to get in her way.
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
